#
# What : Playbook to to save the current code in working-dir into a new branch  
#	 This includes :	- remove all files
#				- remove all tags
#				- remove all branches
#				- create new empty files t1 t2 t3 t4
#
# Date : 17.May 2018 Walter Brunelli
#
# Usage: ansible-playbook pl_dsf_git_workflow_clean_repo.yml
#	 ansible-playbook pl_dsf_git_workflow_clean_repo.yml -e "repo_url=https://github.com/wbrunell/repo01"
#	 ansible-playbook pl_dsf_git_workflow_clean_repo.yml -e "repo_dir_name=repo01"
#	 ansible-playbook pl_dsf_git_workflow_clean_repo.yml -e "local_base_dir=/var/tmp"

---
- name: Save current status in a branch
  hosts: localhost
  become_user: none
  become: no
  vars_files:
    - pl_dsf_git_workflow_all_setupvariables.yml

  tasks:
    - name: Check if Directory exists
      stat: path={{local_base_dir}}/{{repo_dir_name}}/.git
      register: dir
    - name: Clean the directory (if it is already there)
      shell: 'cd {{local_base_dir}}/{{repo_dir_name}}; /usr/local/bin/git pull; /usr/local/bin/git clean -f'
      when: dir.stat.exists == true
      #debug: msg="repo_dirname = {{repo_dir_name}}"

    - name: Check that branch does not already exists
      shell: 'cd {{local_base_dir}}/{{repo_dir_name}}; git branch -a | grep save_from_migration'
      register: branch
    - debug: Exiting, Branch save_from_migration already exists. Code already saved.
      when: branch.rc == 0
    - name: End Play if branch does already exist
      meta: end_play
      when: branch.rc == 0

    - name: Create directory if it does not exist and clone from Github
      git: repo={{repo_url}} dest={{local_base_dir}}/{{repo_dir_name}}
      when: dir.stat.exists == false
      
    - name: Copy current status to a new branch      
      shell: "{{item}}"
      with_items:
        - 'cd {{local_base_dir}}/{{repo_dir_name}}; git checkout save_from_migration'
        - 'cd {{local_base_dir}}/{{repo_dir_name}}; git branch -d master'
        - 'cd {{local_base_dir}}/{{repo_dir_name}}; git branch master'
        - 'cd {{local_base_dir}}/{{repo_dir_name}}; git checkout master' 
        - 'cd {{local_base_dir}}/{{repo_dir_name}}; git push origin master' 
