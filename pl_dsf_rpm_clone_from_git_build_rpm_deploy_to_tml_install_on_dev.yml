#
# What : Playbook to download feed or stream from GitHub and package it into an RPM. Make it available in a RPM Repo and deploy it to target server.
#        Environment : 	DEV	TML-Repo
#	  		TEST	TML-Repo
#			PROD	DML-Repo
#
# Date : 26.Feb.2018 Walter Brunelli
#
# Usage: ansible-playbook $0}.yml
#	 ansible-playbook $0}.yml -e "stream_feed_name=dsf-feeds-F1F"
#        ansible-playbook $0}.yml -e "stream_feed_name=dsf-streams-f1f"


---
- name: Download and Create the RPM Package         
  hosts: cos019
  become_user: dsfrpmbuild
  become: yes
  vars:
    stream_feed: "{{ stream_feed_name | default('dsf-pseudo-xxx') }}"
  tasks:
    - name: Clean download directory
      file: path=/tmp/{{stream_feed}} state=absent
    - name: Download project from GIT https://github.com/wbrunell/{{stream_feed}}
      git: repo=https://github.com/wbrunell/{{stream_feed}} dest=/tmp/{{stream_feed}}
    - name: Find latest version (tag)
      shell: git describe --abbrev=0 --tags chdir=/tmp/{{stream_feed}}
      register: latest_tag  
    - name: Create tar.gz Archive for RPM package (excluding .git directory)
      shell: /usr/bin/tar czf /tmp/{{stream_feed}}.tar.gz ./{{stream_feed}} --exclude ./{{stream_feed}}/.git chdir=/tmp warn=false
    - name: Cleanup the old rpmbuild structure
      file: path=~/rpmbuild state=absent
    - name: Create the rpmbuild structure
      file: path=~/{{ item }} state=directory
      with_items:
        - rpmbuild/SPECS
        - rpmbuild/SOURCES
        - rpmbuild/BUILD
        - rpmbuild/RPMS
    - name: Copy the tar.gz archive to the rpmbuild structure
      command: cp /tmp/{{stream_feed}}.tar.gz ~/rpmbuild/SOURCES
    - name: Copy the spec-file template
      template: src=templates/rpm_spec_mit_version.spec dest=~/rpmbuild/SPECS 
    - name: Build the RPM package. The finished package will be ~rpmbuild/rpmbuild/RPMS/noarch/{{stream_feed}}-{{latest_tag.stdout[1:]}}-0.noarch.rpm
      command: rpmbuild -vv -bb ~/rpmbuild/SPECS/rpm_spec_mit_version.spec --clean
    - name: Copy RPM package to the TML repository
      shell: scp /home/dsfrpmbuild/rpmbuild/RPMS/noarch/{{stream_feed}}-{{latest_tag.stdout[1:]}}-0.noarch.rpm cos020:/var/www/html/dsf_tml

- name: Update TML Repo
  hosts: cos020
  become_user: dsfrpmbuild
  become: yes
  tasks:
    - name: Update repo
      shell: "createrepo /var/www/html/dsf_tml --update"

- name: Install on DEV server
  hosts: dsf_dev
  become_user: root
  become: yes
  vars:
    stream_feed: "{{ stream_feed_name | default('dsf-pseudo-xxx') }}"
  tasks:
    - name: Make yum cache expire in order to re-read updated reposerver metadata
      shell: yum clean expire-cache warn=no
    - name: Update repo metadata
      shell: yum repolist warn=no
    - name: Install package
      #yum: name={{stream_feed}}-{{hostvars.cos019.latest_tag.stdout[1:]}}-0.noarch state=present
      yum: name={{stream_feed}} state=latest


