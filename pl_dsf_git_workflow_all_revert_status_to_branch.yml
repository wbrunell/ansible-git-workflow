#
# What : Playbook to clean and prepare the repo for the Poc of the Git Workflow
#	 This includes :	- remove all files
#				- remove all tags
#				- remove all branches
#				- create new empty files t1 t2 t3 t4
#
# Date : 17.May 2018 Walter Brunelli
#
# Usage: ansible-playbook pl_dsf_git_workflow_clean_repo.yml
#	 ansible-playbook pl_dsf_git_workflow_clean_repo.yml -e "repo_url=https://github.com/wbrunell/repo01"
#	 ansible-playbook pl_dsf_git_workflow_clean_repo.yml -e "repo_dir_name=repo01"
#	 ansible-playbook pl_dsf_git_workflow_clean_repo.yml -e "local_base_dir=/var/tmp"

---
- name: Save current status in a branch
  hosts: localhost
  become_user: none
  become: no
  vars_files:
    - pl_dsf_git_workflow_all_setupvariables.yml

  tasks:
    - name: Check if Directory exists
      stat: path={{local_base_dir}}/{{repo_dir_name}}/.git
      register: dir
    - name: Clean the directory (if it is already there)
      shell: 'cd {{local_base_dir}}/{{repo_dir_name}}; /usr/local/bin/git pull; /usr/local/bin/git clean -f'
      when: dir.stat.exists == true
      #debug: msg="repo_dirname = {{repo_dir_name}}"

    - name: Check if branch Directory exists
      stat: path={{local_base_dir}}/{{repo_dir_name}}/.branch_sos
      register: branchdir
    - name: Remove the branch directory (if it is already there)
      shell: 'cd {{local_base_dir}}/{{repo_dir_name}}; rm -rf .branch_sos; git worktree prune; git branch -D sos'
      when: branchdir.stat.exists == true

    - name: Create directory if it does not exist and clone from Github
      git: repo={{repo_url}} dest={{local_base_dir}}/{{repo_dir_name}}
      when: dir.stat.exists == false
      
    - name: Check that branch exists (save_from_migration)
      stat: path={{local_base_dir}}/{{repo_dir_name}}i; git branch -a | grep save_from_migration'
      register: result
    - debug: msg="Exiting Playbook. Branch to fail back (save_from_migration) does not exist"
      when: result.rc != 0
    - name: End Play if there are no changes in the Working-Dir
      meta: end_play
      when: result.rc != 0

    - name: Copy current status to a new branch      
      shell: {{item}}
      with_items:
        - 'cd {{local_base_dir}}/{{repo_dir_name}}; git checkout save_from_migration'
        - 'cd {{local_base_dir}}/{{repo_dir_name}}; git branch -d master'
        - 'cd {{local_base_dir}}/{{repo_dir_name}}; git branch master'
        - 'cd {{local_base_dir}}/{{repo_dir_name}}; git checkout master' 
#       Delete tags ....
